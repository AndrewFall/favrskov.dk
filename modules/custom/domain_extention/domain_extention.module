<?php

/**
 * @file Domain extension module.
 */

/**
 * Maximum age of temporary files in seconds.
 */
define('DOMAIN_EXTENTION_DEFAULT_PAGE_NODES_COUNT', 50);

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add fields that helps to implement VBO-style content selection feature with
 * domain_content_admin form.
 *
 * @see domain_content_form().
 */
function domain_extention_form_domain_content_admin_alter(&$form, &$form_state, $form_id) {
  global $user;

  // Path to root folder of domain_extention module.
  $path = drupal_get_path('module', 'domain_extention');

  // Get filtered count of nodes that were selected by user before.
  $filtered_count = variable_get("domain_extention_filtered_count_$user->uid", 0);

  // In case filters haven`t been used yet - set $filtered_count to count of all
  // nodes.
  if (empty($filtered_count)) {
    $filtered_count = _domain_extention_get_filtered_count();
  }

  $form['filtered_count'] = array(
    '#type' => 'textfield',
    '#default_value' => $filtered_count,
    '#weight' => 0,
    '#attributes' => array(
      'class' => array('filtered-count')
    ),
  );

  // 0 - Do nothing
  // 1 - Apply to default page nodes count (default = 50 nodes).
  // 2 - Apply to all filtered nodes.
  // @see domain_extention_admin_nodes_validate() for more info.
  $form['select_nodes_on_page_or_all'] = array(
    '#type' => 'textfield',
    '#default_value' => '0',
    '#weight' => 0,
    '#attributes' => array(
      'class' => array('select-nodes-on-page-or-all')
    ),
  );

  $vars = array(
    'selected_nodes_in_page' => t('Selected <strong>@default_nodes_count nodes</strong> in this page.', array('@default_nodes_count' => DOMAIN_EXTENTION_DEFAULT_PAGE_NODES_COUNT)),
    'select_all_nodes_in_table' => t('Select all @filtered_nodes_count nodes in this table.', array('@filtered_nodes_count' => $filtered_count)),
    'selected_nodes_in_table' => t('Selected <strong>@filtered_nodes_count nodes</strong> in this table.', array('@filtered_nodes_count' => $filtered_count)),
    'select_default_amount_nodes_in_page' => t('Select only @default_nodes_count nodes in this page.', array('@default_nodes_count' => DOMAIN_EXTENTION_DEFAULT_PAGE_NODES_COUNT)),
  );
  $select_buttons_markup = theme('select_buttons', $vars);

  $form['#attached']['css'][] =  "$path/css/domain_extention.css";
  $form['#attached']['js'][] = "$path/js/domain_extention.js";
  $form['#attached']['js'][] = array(
    'data' => array(
      'domainExtention' => array(
        'filteredCount' => $filtered_count,
        'selectButtonsMarkup' => $select_buttons_markup,
        'defaultPageNodeCount' => DOMAIN_EXTENTION_DEFAULT_PAGE_NODES_COUNT,
      ),
    ),
    'type' => 'setting',
  );

  $form['#submit'][] = 'domain_extention_filter_form_submit';
  $form['admin']['options']['submit']['#validate'][] = 'domain_extention_admin_nodes_validate';

  // @todo: refactor this
  // Override node_admin_nodes_submit() submit handler with new one to allow
  // perform operations on all nodes instead of perform them on nodes
  // presented only on current table page (like VBO contrib module does).
  $default_handler_index = array_search('node_admin_nodes_submit', $form['admin']['options']['submit']['#submit']);
  $form['admin']['options']['submit']['#submit'][$default_handler_index] = 'domain_extention_admin_nodes_submit';
}

/**
 * Validate handler for domain_admin_nodes form. Determine whether to perform
 * mass operation on all nodes or only on part of them.
 */
function domain_extention_admin_nodes_validate($form, &$form_state) {
  $test = 7;
  // Use form_set_value() to update $form_state['values']['nodes']
}

/**
 * Submit handler for filters on domain_content_admin form. Used with form
 * presented on "admin/domain/content/%domain_id" pages.
 */
function domain_extention_filter_form_submit($form, &$form_state) {
  global $user;

  $filtered_count = _domain_extention_get_filtered_count();

  // Set filtered count value to variable separately for each logged in user
  // to reuse in domain_extention_form_domain_content_admin_alter().
  variable_set("domain_extention_filtered_count_$user->uid", $filtered_count);
}

/**
 * Retrieve amount of filtered content.
 *
 * Internal function for this module. If filters are empty - return amount of
 * all nodes, otherwise amount of filtered nodes.
 */
function _domain_extention_get_filtered_count() {
  $query = db_select('node', 'n');
  node_build_filter_query($query);
  $filtered_count = $query->countQuery()->execute()->fetchCol();

  return $filtered_count[0];
}

/**
 * Overrides node_admin_nodes_submit() handler to extend filter capabilities
 * with behavior similar to VBO filters.
 */
function domain_extention_admin_nodes_submit($form, &$form_state) {
  // @Todo: perform operations on all nodes.
  $operations = module_invoke_all('node_operations');
  $operation = $operations[$form_state['values']['operation']];
  // Filter out unchecked nodes
  $nodes = array_filter($form_state['values']['nodes']);
  if ($function = $operation['callback']) {
    // Add in callback arguments if present.
    if (isset($operation['callback arguments'])) {
      $args = array_merge(array($nodes), $operation['callback arguments']);
    }
    else {
      $args = array($nodes);
    }
    call_user_func_array($function, $args);

    cache_clear_all();
  }
  else {
    // We need to rebuild the form to go to a second step. For example, to
    // show the confirmation form for the deletion of nodes.
    $form_state['rebuild'] = TRUE;
  }
}

/**
 * Implements hook_user_logout().
 */
function domain_extention_user_logout($account) {
  // Ensure that next session we will start with filtered_count from scratch.
  variable_del("domain_extention_filtered_count_$account->uid");
}

/**
 * Implements hook_js_alter().
 */
function domain_extention_js_alter(&$javascript) {
  // Restrict usage of tableselect.js on admin/domain/content/* pages to
  // replace it with domain_extention.js.
  if (strpos(current_path(), 'admin/domain/content/') !== FALSE) {
    unset($javascript['misc/tableselect.js']);
  }
}

/**
 * Implements hook_theme().
 */
function domain_extention_theme($existing, $type, $theme, $path) {
  return array(
    'select_buttons' => array(
      'path' => "$path/templates",
      'template' => 'content-select-buttons',
      'arguments' => array(
        'selected_nodes_in_page' => NULL,
        'select_all_nodes_in_table' => NULL,
        'selected_nodes_in_table' => NULL,
        'select_default_amount_nodes_in_page' => NULL,
      ),
    ),
  );
}
