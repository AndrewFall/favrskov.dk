<?php

/**
 * @file
 * Main file of favrskov_helper.module
 */

/**
 * Helper to manually add a single translation string.
 *
 * After adding strings use locale_clear_cache() for clearing caches.
 */
function locale_add_translation($source, $langcode, $translation, $context = '', $textgroup = 'default') {
  $report = &drupal_static(__FUNCTION__, array(
    'additions' => 0,
    'updates' => 0,
    'deletes' => 0,
    'skips' => 0,
  ));

  require_once DRUPAL_ROOT . '/includes/locale.inc';

  _locale_import_one_string_db($report, $langcode, $context, $source, $translation, $textgroup, 'Manual import via helper ' . __FUNCTION__ . '().', LOCALE_IMPORT_OVERWRITE);
}

/**
 * Helper to clear the locale cache.
 */
function locale_clear_cache() {
  require_once DRUPAL_ROOT . '/includes/locale.inc';

  // Clear locale cache.
  _locale_invalidate_js();
  cache_clear_all('locale:', 'cache', TRUE);
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function favrskov_helper_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'feeds_tamper' && $plugin_type == 'plugins') {
    return 'feeds_tamper_plugins/';
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function favrskov_helper_ctools_plugin_api($owner, $api) {
  if ($owner == 'metatag' && $api == 'metatag') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_pathauto_alias_alter().
 */
function favrskov_helper_pathauto_alias_alter(&$alias, &$context) {
  $alias = str_replace('favrskovtokensseparator', '/', $alias);
}
